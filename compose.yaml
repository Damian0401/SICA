services:
    ollama:
      image: ollama/ollama
      container_name: ollama
      restart: unless-stopped
      volumes:
        - ollama_data:/root/.ollama
        - ./scripts/ollama-entrypoint.sh:/entrypoint.sh
      entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]
    qdrant:
      image: qdrant/qdrant
      container_name: qdrant
      restart: unless-stopped
      ports:
        - "5051:6333"
      environment:
        QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}
      volumes:
        - qdrant_data:/qdrant/storage
    azurite:
      image: mcr.microsoft.com/azure-storage/azurite
      container_name: azurite
      command: azurite --blobHost 0.0.0.0 --blobPort 10000 --silent --skipApiVersionCheck
      restart: unless-stopped
      environment:
        AZURITE_ACCOUNTS: ${AZURITE_ACCOUNT_NAME}:${AZURITE_ACCOUNT_KEY}
      volumes:
        - azurite_data:/data
    backend:
      build:
        context: ./backend
      container_name: backend
      restart: unless-stopped
      ports:
        - "5050:8080"
      environment:
        VectorStore__QdrantUrl: http://qdrant:6334
        VectorStore__QdrantApiKey: ${QDRANT_API_KEY}
        SemanticVectorGenerator__OllamaUrl: http://ollama:11434
        BlobStore__ConnectionString: DefaultEndpointsProtocol=http;AccountName=${AZURITE_ACCOUNT_NAME};AccountKey=${AZURITE_ACCOUNT_KEY};BlobEndpoint=http://azurite:10000/${AZURITE_ACCOUNT_NAME};
      depends_on:
        - ollama
        - qdrant
        - azurite
    frontend:
      build:
        context: ./frontend
      container_name: frontend
      restart: unless-stopped
      ports:
      - "80:80"
      depends_on:
      - backend
volumes:
  ollama_data:
  qdrant_data:
  azurite_data: